{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","request","url","options","a","fetch","response","ok","Error","status","statusText","json","result","data","getUserPosts","userId","posts","filter","post","getPostDetails","postId","details","PostsList","getSelectedPostId","useState","setPosts","useEffect","then","className","map","key","id","body","type","onClick","NewCommentForm","onAdd","name","setName","email","setEmail","setBody","onSubmit","event","preventDefault","placeholder","required","value","onChange","target","defaultProps","getPostComments","comments","postComments","comment","addComment","method","JSON","stringify","deleteComment","commentId","PostDetails","setComments","isVisble","setIsVisble","api","commentDelete","updateComments","commentsFromServer","addCommment","App","selectedUserId","setselectedUserId","selectedPostId","setselectedPostId","postDetails","setPostDetails","apiPost","ReactDOM","render","document","getElementById"],"mappings":"iXAAaA,EAAW,iCAEjB,SAAeC,EAAtB,oC,4CAAO,WAAuBC,EAAKC,GAA5B,iBAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIL,GAAJ,OAAeE,GAAOC,GAD7C,WACCG,EADD,QAGSC,GAHT,sBAIG,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAJ9C,uBAOgBJ,EAASK,OAPzB,cAOCC,EAPD,yBASEA,EAAOC,MATT,4C,sBAYA,ICZMC,EAAY,uCAAG,WAAMC,GAAN,eAAAX,EAAA,sEACNH,EAAQ,UADF,UACpBe,EADoB,OAGrBD,EAHqB,yCAIjBC,GAJiB,gCAOnBA,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKH,UAAYA,MAPnB,2CAAH,sDAUZI,EAAc,uCAAG,WAAMC,GAAN,eAAAhB,EAAA,sEACNH,EAAQ,UAAD,OAAWmB,IADZ,cACtBC,EADsB,yBAGrBA,GAHqB,2CAAH,sDCPdC,EAAY,SAAC,GAA2C,IAAzCP,EAAwC,EAAxCA,OAAQQ,EAAgC,EAAhCA,kBAAmBH,EAAa,EAAbA,OAAa,EACxCI,mBAAS,IAD+B,mBAC3DR,EAD2D,KACpDS,EADoD,KAQlE,OALAC,qBAAU,WACRZ,EAAaC,GACVY,KAAKF,KACP,CAACV,IAGF,yBAAKa,UAAU,aACb,sCAEA,wBAAIA,UAAU,mBACXZ,EAAMa,KAAI,SAAAX,GAAI,OACb,wBACEY,IAAKZ,EAAKa,GACVH,UAAU,mBAEV,6BACE,mCAEGV,EAAKH,QAER,6BACCG,EAAKc,MAER,4BACEC,KAAK,SACLL,UAAU,2BACVM,QAAS,WACPd,IAAWF,EAAKa,GACZR,EAAkB,GAClBA,EAAkBL,EAAKa,MAG5BX,IAAWF,EAAKa,GAAK,OAAS,gBCpChCI,G,MAAiB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOhB,EAAa,EAAbA,OAAa,EAC3BI,mBAAS,IADkB,mBAC5Ca,EAD4C,KACtCC,EADsC,OAEzBd,mBAAS,IAFgB,mBAE5Ce,EAF4C,KAErCC,EAFqC,OAG3BhB,mBAAS,IAHkB,mBAG5CQ,EAH4C,KAGtCS,EAHsC,KAsBnD,OACE,0BACEb,UAAU,iBACVc,SApBmB,SAACC,GACtBA,EAAMC,iBASNR,EAPmB,CACjBC,OACAL,OACAO,QACAnB,WAKFkB,EAAQ,IACRE,EAAS,IACTC,EAAQ,MAQN,yBAAKb,UAAU,cACb,2BACEK,KAAK,OACLI,KAAK,OACLQ,YAAY,YACZjB,UAAU,wBACVkB,UAAQ,EACRC,MAAOV,EACPW,SAAW,SAAAL,GAAK,OAAIL,EAAQK,EAAMM,OAAOF,WAI7C,yBAAKnB,UAAU,cACb,2BACEK,KAAK,OACLI,KAAK,QACLQ,YAAY,aACZjB,UAAU,wBACVkB,UAAQ,EACRC,MAAOR,EACPS,SAAW,SAAAL,GAAK,OAAIH,EAASG,EAAMM,OAAOF,WAI9C,yBAAKnB,UAAU,cACb,8BACES,KAAK,OACLQ,YAAY,oBACZjB,UAAU,wBACVkB,UAAQ,EACRC,MAAOf,EACPgB,SAAW,SAAAL,GAAK,OAAIF,EAAQE,EAAMM,OAAOF,WAI7C,4BACEd,KAAK,SACLL,UAAU,wCAFZ,oBAeNO,EAAee,aAAe,CAC5B9B,OAAQ,GChFH,IAAM+B,EAAe,uCAAG,WAAM/B,GAAN,iBAAAhB,EAAA,sEACNH,EAAQ,aADF,cACvBmD,EADuB,OAEvBC,EAAeD,EAASnC,QAAO,SAAAqC,GAAO,OAAIA,EAAQlC,SAAWA,KAFtC,kBAItBiC,GAJsB,2CAAH,sDAOfE,EAAU,uCAAG,mCAAAnD,EAAA,6DAAQiC,EAAR,EAAQA,KAAMjB,EAAd,EAAcA,OAAQmB,EAAtB,EAAsBA,MAAOP,EAA7B,EAA6BA,KAA7B,mBJKAnB,EIJX,CACXO,SACAiB,OACAE,QACAP,QJA+B/B,EIJjC,YJI8C,CAC9CuD,OAAQ,OACRxB,KAAMyB,KAAKC,UAAU7C,OIPG,iCJKN,IAAMA,IILA,OAAH,sDASV8C,EAAgB,SAAAC,GAAS,OJCT3D,EIDoB,aAAD,OAAc2D,GJCpB,CAAEJ,OAAQ,YKbvCK,G,MAAc,SAAC,GAAc,IAAZ3C,EAAW,EAAXA,KAAW,EACPM,mBAAS,IADF,mBAChC4B,EADgC,KACtBU,EADsB,OAEPtC,oBAAS,GAFF,mBAEhCuC,EAFgC,KAEtBC,EAFsB,KAIvCtC,qBAAU,WACRuC,EAAoB/C,EAAKa,IACtBJ,KAAKmC,KACP,CAAC5C,EAAKa,KAET,IAAMmC,EAAa,uCAAG,WAAMN,GAAN,SAAAxD,EAAA,sEACd6D,EAAkBL,GADJ,OAGpBO,IAHoB,2CAAH,sDAMbA,EAAc,uCAAG,4BAAA/D,EAAA,sEACY6D,EAAoB/C,EAAKa,IADrC,OACfqC,EADe,OAGrBN,EAAYM,GAHS,2CAAH,qDAMdC,EAAW,uCAAG,WAAMT,GAAN,SAAAxD,EAAA,sEACZ6D,EAAeL,GADH,OAGlBO,IAHkB,2CAAH,sDAMjB,OACE,yBAAKvC,UAAU,eACb,6CAEA,6BAASA,UAAU,qBACjB,2BAAIV,EAAKc,OAGX,6BAASJ,UAAU,yBACjB,4BACEK,KAAK,SACLL,UAAU,SACVM,QAAS,kBAAM8B,GAAaD,KAE3BA,EAAW,gBAAkB,iBAG/BA,GACC,wBAAInC,UAAU,qBACXwB,EAASvB,KAAI,SAAAyB,GAAO,OACnB,wBACE1B,UAAU,yBACVE,IAAKwB,EAAQvB,IAEb,4BACEE,KAAK,SACLL,UAAU,oCACVM,QAAS,kBAAMgC,EAAcZ,EAAQvB,MAHvC,KAOA,2BAAIuB,EAAQtB,YAQtB,iCACE,yBAAKJ,UAAU,6BACb,kBAAC,EAAD,CACEQ,MAAOiC,EACPjD,OAAQF,EAAKa,UCTVuC,EA5DH,WAAO,IAAD,EAC4B9C,mBAAS,GADrC,mBACT+C,EADS,KACOC,EADP,OAE4BhD,mBAAS,GAFrC,mBAETiD,EAFS,KAEOC,EAFP,OAGsBlD,mBAAS,MAH/B,mBAGTmD,EAHS,KAGIC,EAHJ,KAYhB,OACE,yBAAKhD,UAAU,OACb,4BAAQA,UAAU,eAChB,qDAGE,4BACEA,UAAU,qBACVmB,MAAOwB,EACPvB,SAAW,SAAAL,GAAK,OAAI6B,EAAkB7B,EAAMM,OAAOF,SAEnD,6CACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,gBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,wBACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,KAAd,4BACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,MAAd,oBAKN,0BAAMnB,UAAU,aACd,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEb,OAAQwD,EACRhD,kBArCgB,SAACH,GACzByD,EAAuBzD,GACpBO,KAAKiD,GAERF,EAAkBtD,IAkCVA,OAAQqD,KAIZ,yBAAK7C,UAAU,gBACZ+C,EAEG,kBAAC,EAAD,CAAazD,KAAMyD,IAElB,mDCtDfG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7d1bbd5b.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport async function request(url, options) {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result.data;\n}\n\nexport const post = (url, data) => request(url, {\n  method: 'POST',\n  body: JSON.stringify(data),\n});\n\nexport const remove = url => request(url, { method: 'DELETE' });\n","import { request } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const posts = await request('/posts');\n\n  if (!userId) {\n    return posts;\n  }\n\n  return posts.filter(post => post.userId === +userId);\n};\n\nexport const getPostDetails = async(postId) => {\n  const details = await request(`/posts/${postId}`);\n\n  return details;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({ userId, getSelectedPostId, postId }) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(setPosts);\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                User:\n                {post.userId}\n              </b>\n              <br />\n              {post.body}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                postId === post.id\n                  ? getSelectedPostId(0)\n                  : getSelectedPostId(post.id);\n              }}\n            >\n              {postId !== post.id ? 'Open' : 'Close'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.digit,\n  getSelectedPostId: PropTypes.func,\n  postId: PropTypes.digit,\n}.isRequired;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ onAdd, postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const addCommentForm = (event) => {\n    event.preventDefault();\n\n    const newComment = {\n      name,\n      body,\n      email,\n      postId,\n    };\n\n    onAdd(newComment);\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={addCommentForm}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n          value={name}\n          onChange={(event => setName(event.target.value))}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n          value={email}\n          onChange={(event => setEmail(event.target.value))}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n          value={body}\n          onChange={(event => setBody(event.target.value))}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  postId: PropTypes.number,\n};\n\nNewCommentForm.defaultProps = {\n  postId: 0,\n};\n","import { request, post, remove } from './api';\n\nexport const getPostComments = async(postId) => {\n  const comments = await request('/comments');\n  const postComments = comments.filter(comment => comment.postId === postId);\n\n  return postComments;\n};\n\nexport const addComment = async({ name, postId, email, body }) => post(\n  '/comments', {\n    postId,\n    name,\n    email,\n    body,\n  },\n);\n\nexport const deleteComment = commentId => remove(`/comments/${commentId}`);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport * as api from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ post }) => {\n  const [comments, setComments] = useState([]);\n  const [isVisble, setIsVisble] = useState(false);\n\n  useEffect(() => {\n    api.getPostComments(post.id)\n      .then(setComments);\n  }, [post.id]);\n\n  const commentDelete = async(commentId) => {\n    await api.deleteComment(commentId);\n\n    updateComments();\n  };\n\n  const updateComments = async() => {\n    const commentsFromServer = await api.getPostComments(post.id);\n\n    setComments(commentsFromServer);\n  };\n\n  const addCommment = async(commentId) => {\n    await api.addComment(commentId);\n\n    updateComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setIsVisble(!isVisble)}\n        >\n          {isVisble ? 'Hide comments' : 'Show comments'}\n        </button>\n\n        {isVisble && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => commentDelete(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            onAdd={addCommment}\n            postId={post.id}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  post: PropTypes.shape({\n    userId: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport * as apiPost from './api/posts';\n\nconst App = () => {\n  const [selectedUserId, setselectedUserId] = useState(0);\n  const [selectedPostId, setselectedPostId] = useState(0);\n  const [postDetails, setPostDetails] = useState(null);\n\n  const getSelectedPostId = (postId) => {\n    apiPost.getPostDetails(postId)\n      .then(setPostDetails);\n\n    setselectedPostId(postId);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUserId}\n            onChange={(event => setselectedUserId(event.target.value))}\n          >\n            <option>All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={selectedUserId}\n            getSelectedPostId={getSelectedPostId}\n            postId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postDetails\n            ? (\n              <PostDetails post={postDetails} />\n            )\n            : (<p>No post selected</p>)\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}